{"ast":null,"code":"var _jsxFileName = \"/home/kyle/Software-Engineering-I/BearBytes/reactFrontEnd/src/components/Button.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button({\n  text = \"Button\",\n  color = \"black\",\n  fontSize = 12\n}) {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [isAvailable, setIsAvailable] = useState(true);\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  function addToCart() {\n    // Add your logic to add the room to the cart\n  }\n  function checkAvailability() {\n    // Check if availability is an array before calling includes on it\n    if (Array.isArray(availability)) {\n      setIsAvailable(availability.includes(startDate) && availability.includes(endDate));\n    } else {\n      setIsAvailable(false);\n    }\n  }\n\n  // Call checkAvailability whenever startDate or endDate changes\n  useEffect(() => {\n    checkAvailability();\n  }, [startDate, endDate]);\n  const buttonStyle = {\n    color: color,\n    fontSize: fontSize + \"px\",\n    borderRadius: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      children: [\" \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Reservation Modal\",\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Reserve \", title, \" Room\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), isAvailable ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Room is not available on these dates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Button, \"dU0jFToWeVc28yYRpJRziXcSyXQ=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["Button","text","color","fontSize","_s","modalIsOpen","setModalIsOpen","useState","startDate","setStartDate","endDate","setEndDate","isAvailable","setIsAvailable","openModal","closeModal","addToCart","checkAvailability","Array","isArray","availability","includes","useEffect","buttonStyle","borderRadius","_jsxDEV","children","style","fileName","_jsxFileName","lineNumber","columnNumber","Modal","isOpen","onRequestClose","contentLabel","customStyles","title","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/kyle/Software-Engineering-I/BearBytes/reactFrontEnd/src/components/Button.jsx"],"sourcesContent":["function Button({text=\"Button\", color=\"black\", fontSize=12}) {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [isAvailable, setIsAvailable] = useState(true);\n\n    function openModal() {\n        setModalIsOpen(true);\n    }\n\n    function closeModal() {\n        setModalIsOpen(false);\n    }\n\n    function addToCart() {\n        // Add your logic to add the room to the cart\n    }\n\n    function checkAvailability() {\n        // Check if availability is an array before calling includes on it\n        if (Array.isArray(availability)) {\n            setIsAvailable(availability.includes(startDate) && availability.includes(endDate));\n        } else {\n            setIsAvailable(false);\n        }\n    }\n\n    // Call checkAvailability whenever startDate or endDate changes\n    useEffect(() => {\n        checkAvailability();\n    }, [startDate, endDate]);\n\n    const buttonStyle = {\n        color: color,\n        fontSize: fontSize + \"px\",\n        borderRadius: \"10px\",\n    };\n\n    return (\n        <div>\n            <button style={buttonStyle}> {text}</button>\n            <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            contentLabel=\"Reservation Modal\"\n            style={customStyles}\n            >\n            <h2>Reserve {title} Room</h2>\n            <label>\n                Start Date:\n                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} />\n            </label>\n            <label>\n                End Date:\n                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n            </label>\n            {isAvailable ? <button onClick={addToCart}>Add to Cart</button> : <p>Room is not available on these dates.</p>}\n            <button onClick={closeModal}>Close</button>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Button;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}