[33mcommit 0fe13b5568ac812483231d8999a5985f376aa5d9[m[33m ([m[1;36mHEAD -> [m[1;32mKyleStuff[m[33m)[m
Author: KyleSumners <114194918+KyleSumners@users.noreply.github.com>
Date:   Tue Apr 9 15:24:34 2024 -0500

    Add ability for clerks to modify rooms

[1mdiff --git a/reactFrontEnd/src/App.js b/reactFrontEnd/src/App.js[m
[1mindex 6fa6e2c1..9c02ed5e 100644[m
[1m--- a/reactFrontEnd/src/App.js[m
[1m+++ b/reactFrontEnd/src/App.js[m
[36m@@ -11,6 +11,7 @@[m [mimport RoomSearch from './pages/RoomSearch'[m
 import RegisterGuest from './pages/RegisterGuest';[m
 import RegistrationSuccess from './pages/RegistrationSuccess';[m
 import RegistrationFailed from './pages/RegistrationFailed';[m
[32m+[m[32mimport GuestReservations from './pages/GuestReservations';[m
 [m
 function App() {[m
   return ([m
[36m@@ -27,6 +28,7 @@[m [mfunction App() {[m
         <Route path="/registerGuest" element={<RegisterGuest />} />[m
         <Route path="/registrationSuccess" element={<RegistrationSuccess />} />[m
         <Route path="/registrationFailed" element={<RegistrationFailed/>}/>[m
[32m+[m[32m        <Route path="/guestReservations" element={<GuestReservations />}/>[m
       </Routes>[m
     </Router>[m
   );[m
[1mdiff --git a/reactFrontEnd/src/clerkPageComponents/ClerkRoomDisplay.jsx b/reactFrontEnd/src/clerkPageComponents/ClerkRoomDisplay.jsx[m
[1mindex 84788ca0..1a0e6d00 100644[m
[1m--- a/reactFrontEnd/src/clerkPageComponents/ClerkRoomDisplay.jsx[m
[1m+++ b/reactFrontEnd/src/clerkPageComponents/ClerkRoomDisplay.jsx[m
[36m@@ -4,12 +4,11 @@[m [mimport { useState, useEffect } from 'react'[m
 [m
 [m
 [m
[31m-function ClerkRoomDisplay() {[m
[32m+[m[32mfunction ClerkRoomDisplay({rooms, setRooms}) {[m
     useEffect(() => {[m
         renderRooms();[m
     }, []);[m
 [m
[31m-    const [rooms, setRooms] = useState([]);[m
     const [isLoading, setLoading] = useState(true);[m
     // Fetch all of the available rooms[m
     function renderRooms() {[m
[36m@@ -36,6 +35,8 @@[m [mfunction ClerkRoomDisplay() {[m
         <div className="display">[m
             {rooms.length !== 0 ? rooms.map((room) =>([m
                 <RoomModifyAndStatus className="room-display" key={room.number} [m
[32m+[m[32m                rooms = {rooms}[m
[32m+[m[32m                setRooms = {setRooms}[m
                 imgLink={singleRoom} [m
                 type={room.type} [m
                 cost={room.dailyRate} [m
[36m@@ -43,7 +44,8 @@[m [mfunction ClerkRoomDisplay() {[m
                 bedSize={room.bedSize}[m
                 smokingAllowed={room.smokingAllowed}[m
                 roomNum={room.number}[m
[31m-                quality={room.quality}/>[m
[32m+[m[32m                quality={room.quality}[m
[32m+[m[32m                floorNum={room.floor}/>[m
             )): <div>No rooms available</div>}[m
         </div>[m
     );[m
[1mdiff --git a/reactFrontEnd/src/clerkPageComponents/RoomModifyAndStatus.jsx b/reactFrontEnd/src/clerkPageComponents/RoomModifyAndStatus.jsx[m
[1mindex 8ee631b3..3d75a892 100644[m
[1m--- a/reactFrontEnd/src/clerkPageComponents/RoomModifyAndStatus.jsx[m
[1m+++ b/reactFrontEnd/src/clerkPageComponents/RoomModifyAndStatus.jsx[m
[36m@@ -1,11 +1,182 @@[m
 import React, { useState, useEffect } from 'react';[m
[32m+[m[32mimport Modal from 'react-modal';[m
 import './roomModifyAndStatus.css'[m
 [m
[32m+[m[32mconst customStyles = {[m
[32m+[m[32m    content: {[m
[32m+[m[32m      top: '50%',[m
[32m+[m[32m      left: '50%',[m
[32m+[m[32m      right: 'auto',[m
[32m+[m[32m      bottom: 'auto',[m
[32m+[m[32m      marginRight: '-50%',[m
[32m+[m[32m      transform: 'translate(-50%, -50%)',[m
[32m+[m[32m    },[m
[32m+[m[32m};[m
[32m+[m[41m  [m
[32m+[m[32m// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)[m
[32m+[m[32mModal.setAppElement('#root');[m
 [m
[31m-function RoomModifyAndStatus({ imgLink, type, cost, numBeds, bedSize, smokingAllowed, roomNum, quality}) {[m
[32m+[m[32mfunction RoomModifyAndStatus({ imgLink, type, cost, numBeds, bedSize, smokingAllowed, roomNum, quality, floorNum, rooms, setRooms}) {[m
[32m+[m[32m    const [modalIsOpen, setIsOpen] = useState(false);[m
[32m+[m[32m    const [number, setNumber] = useState(roomNum);[m
[32m+[m[32m    const [floor, setFloor] = useState(floorNum);[m
[32m+[m[32m    const [numberBeds, setNumberBeds] = useState(numBeds);[m
[32m+[m[32m    const [rate, setRate] = useState(cost);[m
[32m+[m[32m    const [bedSizes, setBedSizes] = useState(bedSize);[m
[32m+[m[32m    const [roomType, setRoomType] = useState(type);[m
[32m+[m[32m    const [roomQuality, setRoomQuality] = useState(quality);[m
[32m+[m[32m    const [smokingIsAllowed, setSmokingIsAllowed] = useState(smokingAllowed);[m
[32m+[m[32m    const [isHidden, setIsHidden] = useState("hidden");[m
[32m+[m
[32m+[m[32m    function modifyRoom(e) {[m
[32m+[m[32m        e.preventDefault();[m
[32m+[m[32m        setNumber(parseInt(number));[m
[32m+[m[32m        setFloor(parseInt(floor));[m
[32m+[m[32m        setNumberBeds(parseInt(numberBeds));[m
[32m+[m[32m        setRate(parseFloat(rate));[m
[32m+[m[32m        let modifiedRoom = {[m
[32m+[m[32m            "number": number,[m
[32m+[m[32m            "numBeds": numberBeds,[m
[32m+[m[32m            "floor": floor,[m
[32m+[m[32m           "dailyRate": rate,[m
[32m+[m[32m            "smokingAllowed": smokingIsAllowed,[m
[32m+[m[32m            "bedSize": bedSizes,[m
[32m+[m[32m            "type": roomType,[m
[32m+[m[32m            "quality": roomQuality[m
[32m+[m[32m        }[m
[32m+[m[32m        let modifyRooms = [[m
[32m+[m[32m            {[m
[32m+[m[32m                "number": roomNum,[m
[32m+[m[32m                "numBeds": numBeds,[m
[32m+[m[32m                "floor": floorNum,[m
[32m+[m[32m                "dailyRate": cost,[m
[32m+[m[32m                "smokingAllowed": smokingAllowed,[m
[32m+[m[32m                "bedSize": bedSize,[m
[32m+[m[32m                "type": type,[m
[32m+[m[32m                "quality": quality[m
[32m+[m[32m            },[m
[32m+[m[32m            modifiedRoom[m
[32m+[m[32m        ][m
[32m+[m[32m        fetch('http://localhost:8080/room/modify', {[m
[32m+[m[32m        mode: 'cors',[m
[32m+[m[32m        method: 'POST',[m
[32m+[m[32m        headers: {[m
[32m+[m[32m          'Content-Type': 'application/json',[m
[32m+[m[32m        },[m
[32m+[m[32m        body: JSON.stringify(modifyRooms)[m
[32m+[m[32m        })[m
[32m+[m[32m        .then(response => response.json())[m
[32m+[m[32m        .then(data => {[m
[32m+[m[32m        if(data) {[m
[32m+[m[32m            let index = rooms.findIndex(r => r.number === roomNum);[m
[32m+[m[32m            const newRooms = [[m
[32m+[m[32m                ...rooms.slice(0, index), // Elements before the one to delete[m
[32m+[m[32m                ...rooms.slice(index + 1) // Elements after the one to delete[m
[32m+[m[32m            ];[m
[32m+[m[32m            newRooms.push(modifiedRoom);[m
[32m+[m[32m            newRooms.sort((a,b) => a.number - b.number);[m
[32m+[m[32m            setRooms(newRooms);[m
[32m+[m[32m            {closeModal()}[m
[32m+[m[32m        } else {[m
[32m+[m[32m            setIsHidden('');[m
[32m+[m[32m            console.log("Woops");[m
[32m+[m[32m        }[m
[32m+[m[32m        })[m
[32m+[m[32m        .catch(error => console.error('Error creating room array:', error));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function openModal() {[m
[32m+[m[32m        setIsHidden('hidden');[m
[32m+[m[32m        setIsOpen(true);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    function closeModal() {[m
[32m+[m[32m        setIsOpen(false);[m
[32m+[m[32m    }[m
 [m
     return ([m
         <div className="box-display">[m
[32m+[m[32m            <Modal[m
[32m+[m[32m                isOpen={modalIsOpen}[m
[32m+[m[32m                onRequestClose={closeModal}[m
[32m+[m[32m                style={customStyles}[m
[32m+[m[32m                contentLabel="Example Modal"[m
[32m+[m[32m            >[m
[32m+[m[32m                <h2 className="modal-title">Modify Room</h2>[m
[32m+[m[32m                <button type="button" onClick={closeModal} className="close-btn">X</button>[m
[32m+[m[32m                <form className="form-container">[m
[32m+[m[32m                    <label htmlFor="roomNum">Room Number: </label>[m
[32m+[m[32m                    <input type="tel"[m
[32m+[m[32m                           id="roomNum"[m
[32m+[m[32m                           name="roomNum"[m[41m [m
[32m+[m[32m                           defaultValue={number}[m[41m [m
[32m+[m[32m                           onChange={(e) => setNumber(e.target.value)}[m[41m [m
[32m+[m[32m                           placeholder="111"[m[41m [m
[32m+[m[32m                           required[m
[32m+[m[32m                           pattern="^[0-9\b]+$"/>[m
[32m+[m[32m                    <label htmlFor="floor">Floor: </label>[m
[32m+[m[32m                    <input type="tel"[m
[32m+[m[32m                           id="floor"[m
[32m+[m[32m                           name="floor"[m[41m [m
[32m+[m[32m                           defaultValue={floor}[m[41m [m
[32m+[m[32m                           onChange={(e) => setFloor(e.target.value)}[m[41m [m
[32m+[m[32m                           placeholder="1-3"[m[41m [m
[32m+[m[32m                           pattern="[1-3]"[m
[32m+[m[32m                           required[m
[32m+[m[32m                           />[m
[32m+[m[32m                    <label htmlFor="numBeds">Beds: </label>[m
[32m+[m[32m                    <input type="tel"[m
[32m+[m[32m                           id="numBeds"[m
[32m+[m[32m                           name="numBeds"[m[41m [m
[32m+[m[32m                           defaultValue={numBeds}[m[41m [m
[32m+[m[32m                           onChange={(e) => setNumberBeds(e.target.value)}[m[41m [m
[32m+[m[32m                           placeholder="1"[m[41m [m
[32m+[m[32m                           required[m
[32m+[m[32m                           pattern="^[0-9\b]+$"/>[m
[32m+[m[32m                    <label htmlFor="rate">Daily Rate: </label>[m
[32m+[m[32m                    <input type="tel"[m
[32m+[m[32m                           id="rate"[m
[32m+[m[32m                           name="rate"[m[41m [m
[32m+[m[32m                           defaultValue={rate}[m[41m [m
[32m+[m[32m                           onChange={(e) => setRate(e.target.value)}[m[41m [m
[32m+[m[32m                           placeholder="175.50"[m[41m [m
[32m+[m[32m                           required[m
[32m+[m[32m                           pattern="^[0-9]*[.,]?[0-9]*$"/>[m
[32m+[m[32m                    <label htmlFor="bedSize">Bed Size: </label>[m
[32m+[m[32m                    <select id="bedSize" defaultValue={bedSize} onChange={(e) => setBedSizes(e.target.value)}>[m
[32m+[m[32m                        <option value="TWIN">Twin</option>[m
[32m+[m[32m                        <option value="FULL">Full</option>[m
[32m+[m[32m                        <option value="QUEEN">Queen</option>[m
[32m+[m[32m                        <option value="KING">King</option>[m
[32m+[m[32m                    </select>[m
[32m+[m[32m                    <label htmlFor="type">Room Type: </label>[m
[32m+[m[32m                    <select id="type" defaultValue={type} onChange={(e) => setRoomType(e.target.value)}>[m
[32m+[m[32m                        <option value="SINGLE">Single</option>[m
[32m+[m[32m                        <option value="DOUBLE">Double</option>[m
[32m+[m[32m                        <option value="FAMILY">Family</option>[m
[32m+[m[32m                        <option value="SUITE">Suite</option>[m
[32m+[m[32m                        <option value="DELUXE">Deluxe</option>[m
[32m+[m[32m                        <option value="STANDARD">Standard</option>[m
[32m+[m[32m                    </select>[m
[32m+[m[32m                    <label htmlFor="quality">Quality: </label>[m
[32m+[m[32m                    <select id="quality" defaultValue={quality} onChange={(e) => setRoomQuality(e.target.value)}>[m
[32m+[m[32m                        <option value="ECONOMY">Economy</option>[m
[32m+[m[32m                        <option value="COMFORT">Comfort</option>[m
[32m+[m[32m                        <option value="BUSINESS">Business</option>[m
[32m+[m[32m                        <option value="EXECUTIVE">Executive</option>[m
[32m+[m[32m                    </select>[m
[32m+[m[32m                    <label>Smoking Allowed: </label>[m
[32m+[m[32m                    <input type="checkbox"[m
[32m+[m[32m                           value={smokingAllowed}[m[41m [m
[32m+[m[32m                           onChange={(e) => setSmokingIsAllowed(e.target.checked)}/>[m
[32m+[m[32m                    <button className="center-button"[m
[32m+[m[32m                            onClick={modifyRoom}>[m
[32m+[m[32m                            submit</button>[m
[32m+[m[32m                    <div className="center">[m
[32m+[m[32m                        <p className={isHidden + " error-msg center"}>Failed to modify, the room number may be taken, or the room you are modifying does not exist</p>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </form>[m
[32m+[m[32m            </Modal>[m
             <img src={imgLink} alt={type} />[m
             <p>Room number: {roomNum}</p>[m
             <p>Room type: {type}</p>[m
[36m@@ -14,7 +185,7 @@[m [mfunction RoomModifyAndStatus({ imgLink, type, cost, numBeds, bedSize, smokingAll[m
             <p>Daily rate: {cost}</p>[m
             <p>Smoking allowed: {smokingAllowed ? "Yes" : "No"}</p>[m
             <div className='clerk-room-btns'>[m
[31m-                <button>Modify</button> [m
[32m+[m[32m                <button onClick={openModal}>Modify</button>[m[41m [m
                 <button>Status</button> [m
             </div>[m
         </div>[m
[1mdiff --git a/reactFrontEnd/src/clerkPageComponents/roomModifyAndStatus.css b/reactFrontEnd/src/clerkPageComponents/roomModifyAndStatus.css[m
[1mindex e2bb8fc8..69896d37 100644[m
[1m--- a/reactFrontEnd/src/clerkPageComponents/roomModifyAndStatus.css[m
[1m+++ b/reactFrontEnd/src/clerkPageComponents/roomModifyAndStatus.css[m
[36m@@ -1,4 +1,22 @@[m
 .clerk-room-btns {[m
     display:flex;[m
     gap: 5%[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.center {[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    justify-content: center;[m
[32m+[m[32m    grid-column: 1 / 3;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.hidden {[m
[32m+[m[32m    display: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.error-msg {[m
[32m+[m[32m    color: red;[m
[32m+[m[32m    overflow-wrap: break-word;[m
[32m+[m[32m    max-width: 30ch;[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m}[m
[1mdiff --git a/reactFrontEnd/src/components/BoxDisplay.jsx b/reactFrontEnd/src/components/BoxDisplay.jsx[m
[1mindex 348a2568..15369afb 100644[m
[1m--- a/reactFrontEnd/src/components/BoxDisplay.jsx[m
[1m+++ b/reactFrontEnd/src/components/BoxDisplay.jsx[m
[36m@@ -19,7 +19,6 @@[m [mfunction BoxDisplay({ imgLink, type, cost, numBeds, bedSize, smokingAllowed, add[m
         setAddedRooms(newAddedRooms);[m
         sessionStorage.setItem('rooms', JSON.stringify(addedRooms));[m
         let index = currRooms.findIndex(r => r.number === room.number);[m
[31m-        console.log(index);[m
         const newRooms = [[m
             ...currRooms.slice(0, index), // Elements before the one to delete[m
             ...currRooms.slice(index + 1) // Elements after the one to delete[m
[1mdiff --git a/reactFrontEnd/src/components/Button.jsx b/reactFrontEnd/src/components/Button.jsx[m
[1mindex 26b26385..7f3207a6 100644[m
[1m--- a/reactFrontEnd/src/components/Button.jsx[m
[1m+++ b/reactFrontEnd/src/components/Button.jsx[m
[36m@@ -1,8 +1,9 @@[m
[31m-function Button({text="Button", color="black", fontSize=12, onClick=null}) {[m
[32m+[m[32mfunction Button({text="Button", color="black", fontSize=12, height, onClick=null}) {[m
     const buttonStyle = {[m
         color: color,[m
         fontSize: fontSize + "px",[m
         borderRadius: "10px",[m
[32m+[m[32m        height: height[m[41m [m
     };[m
 [m
     return ([m
[1mdiff --git a/reactFrontEnd/src/components/GuestNavigation.jsx b/reactFrontEnd/src/components/GuestNavigation.jsx[m
[1mnew file mode 100644[m
[1mindex 00000000..912942c4[m
[1m--- /dev/null[m
[1m+++ b/reactFrontEnd/src/components/GuestNavigation.jsx[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mimport getSessionStorage from '../authentication/GetSessionStorage';[m
[32m+[m[32mimport { useNavigate } from 'react-router-dom';[m
[32m+[m[32mimport Button from "./Button"[m
[32m+[m[32mimport './navigation.css'[m
[32m+[m
[32m+[m[32mfunction GuestNavigation() {[m
[32m+[m[32m    const user = getSessionStorage('user', null);[m
[32m+[m[32m    const navigate = useNavigate();[m
[32m+[m
[32m+[m[32m    const shopRedirect = () => {[m
[32m+[m[32m        navigate("/shop")[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const reservationRedirect = () => {[m
[32m+[m[32m        navigate("/roomSearch")[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const myReservationsRedirect = () => {[m
[32m+[m[32m        navigate("/guestReservations")[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const myBillRedirect = () => {[m
[32m+[m[32m        navigate("/bill")[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <div>[m
[32m+[m[32m            <div className="nav">[m
[32m+[m[32m                <p className="profile">{user ? "Welcome " + user.username : "Error loading profile"}!</p>[m
[32m+[m[32m                <Button text="Shop" onClick={shopRedirect} height="4vh"/>[m
[32m+[m[32m                <Button text="Reserve Room" onClick={reservationRedirect} height="4vh"/>[m
[32m+[m[32m                <Button text="My Reservations" onClick={myReservationsRedirect} height="4vh"/>[m
[32m+[m[32m                <Button text="My Bill" onClick={myBillRedirect} height="4vh"/>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="reservations-display">[m
[32m+[m[32m                <h1 className="center-text content-start">My Reservations</h1>[m
[32m+[m[32m                <div>[m
[32m+[m[32m                    hello[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    )[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default GuestNavigation;[m
\ No newline at end of file[m
[1mdiff --git a/reactFrontEnd/src/components/ReservationsDisplay.jsx b/reactFrontEnd/src/components/ReservationsDisplay.jsx[m
[1mnew file mode 100644[m
[1mindex 00000000..e69de29b[m
[1mdiff --git a/reactFrontEnd/src/components/navigation.css b/reactFrontEnd/src/components/navigation.css[m
[1mnew file mode 100644[m
[1mindex 00000000..e530084d[m
[1m--- /dev/null[m
[1m+++ b/reactFrontEnd/src/components/navigation.css[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m.nav {[m
[32m+[m[32m    min-height: 100vh;[m
[32m+[m[32m    width: 10vw;[m
[32m+[m[32m    box-sizing: border-box;[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    flex-direction: column;[m
[32m+[m[32m    gap: 20px;[m
[32m+[m[32m    padding: 20px;[m
[32m+[m[32m    background-color: gray;[m
[32m+[m[32m    position: fixed;[m
[32m+[m[32m    left: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.profile {[m
[32m+[m[32m    padding-right: 10px;[m
[32m+[m[32m    margin: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav-btn {[m
[32m+[m[32m    min-height: 10vh;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.reservations-display {[m
[32m+[m[32m    height: 100vh;[m
[32m+[m[32m    display: grid;[m
[32m+[m[32m    margin-left: 10vw;[m
[32m+[m[32m    grid-template-rows: 1fr 9fr;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/reactFrontEnd/src/pages/ClerkRoomPage.jsx b/reactFrontEnd/src/pages/ClerkRoomPage.jsx[m
[1mindex c6686d1d..f44f7ed0 100644[m
[1m--- a/reactFrontEnd/src/pages/ClerkRoomPage.jsx[m
[1m+++ b/reactFrontEnd/src/pages/ClerkRoomPage.jsx[m
[36m@@ -13,10 +13,10 @@[m [mconst customStyles = {[m
       marginRight: '-50%',[m
       transform: 'translate(-50%, -50%)',[m
     },[m
[31m-  };[m
[32m+[m[32m};[m
   [m
[31m-  // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)[m
[31m-  Modal.setAppElement('#root');[m
[32m+[m[32m// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)[m
[32m+[m[32mModal.setAppElement('#root');[m
 [m
 function ClerkRoomPage() {[m
     const [modalIsOpen, setIsOpen] = useState(false);[m
[36m@@ -28,6 +28,7 @@[m [mfunction ClerkRoomPage() {[m
     const [type, setType] = useState('SINGLE');[m
     const [quality, setQuality] = useState('ECONOMY');[m
     const [smokingAllowed, setSmokingAllowed] = useState(false);[m
[32m+[m[32m    const [rooms, setRooms] = useState([]);[m
 [m
     function openModal() {[m
         setIsOpen(true);[m
[36m@@ -51,13 +52,7 @@[m [mfunction ClerkRoomPage() {[m
         setFloor(parseInt(floor));[m
         setNumBeds(parseInt(numBeds));[m
         setRate(parseFloat(rate));[m
[31m-        fetch('http://localhost:8080/room/add', {[m
[31m-        mode: 'cors',[m
[31m-        method: 'POST',[m
[31m-        headers: {[m
[31m-          'Content-Type': 'application/json',[m
[31m-        },[m
[31m-        body: JSON.stringify({[m
[32m+[m[32m        let room = {[m
             "number": number,[m
             "numBeds": numBeds,[m
             "floor": floor,[m
[36m@@ -66,15 +61,26 @@[m [mfunction ClerkRoomPage() {[m
             "bedSize": bedSize,[m
             "type": type,[m
             "quality": quality[m
[31m-        })[m
[32m+[m[32m        }[m
[32m+[m[32m        fetch('http://localhost:8080/room/add', {[m
[32m+[m[32m        mode: 'cors',[m
[32m+[m[32m        method: 'POST',[m
[32m+[m[32m        headers: {[m
[32m+[m[32m          'Content-Type': 'application/json',[m
[32m+[m[32m        },[m
[32m+[m[32m        body: JSON.stringify(room)[m
         })[m
         .then(response => response.json())[m
         .then(data => {[m
         if(data) {[m
[31m-            console.log("success");[m
[32m+[m[32m            let newRooms = [...rooms][m
[32m+[m[32m            newRooms.push(room);[m
[32m+[m[32m            newRooms.sort((a,b) => a.number - b.number);[m
[32m+[m[32m            setRooms(newRooms);[m
         } else {[m
             console.log("Woops");[m
         }[m
[32m+[m[32m        {closeModal()}[m
         })[m
         .catch(error => console.error('Error creating room array:', error));[m
     }[m
[36m@@ -83,7 +89,7 @@[m [mfunction ClerkRoomPage() {[m
         <div>[m
             <ClerkHeader/>[m
             <h1 className='text-center clerk-label'>Room Management</h1>[m
[31m-            <h2 className='text-center'>Room missing? <button onClick={openModal}>Add a room</button></h2>[m
[32m+[m[32m            <h2 className='text-center'>Room missing? <button onClick={openModal} className="room-button">Add a room</button></h2>[m
             <Modal[m
                 isOpen={modalIsOpen}[m
                 onRequestClose={closeModal}[m
[36m@@ -164,7 +170,10 @@[m [mfunction ClerkRoomPage() {[m
                             submit</button>[m
                 </form>[m
             </Modal>[m
[31m-            <ClerkRoomDisplay/>[m
[32m+[m[32m            <ClerkRoomDisplay[m[41m [m
[32m+[m[32m                rooms={rooms}[m
[32m+[m[32m                setRooms={setRooms}[m
[32m+[m[32m                />[m
         </div>[m
     )[m
 } [m
[1mdiff --git a/reactFrontEnd/src/pages/ConfirmReservationPage.jsx b/reactFrontEnd/src/pages/ConfirmReservationPage.jsx[m
[1mindex ec8aa272..161465d9 100644[m
[1m--- a/reactFrontEnd/src/pages/ConfirmReservationPage.jsx[m
[1m+++ b/reactFrontEnd/src/pages/ConfirmReservationPage.jsx[m
[36m@@ -7,6 +7,8 @@[m [mimport './styles/confirmReservationPage.css';[m
 [m
 function ConfirmReservationPage() {[m
     const [checkbox, setCheckbox] = useState(false);[m
[32m+[m[32m    const [isHidden, setIsHidden] = useState("hidden");[m
[32m+[m[32m    const [content, setContent] = useState("");[m
     [m
     const dates = getSessionStorage('dates', null);[m
     const rooms = getSessionStorage('rooms', null);[m
[36m@@ -59,11 +61,15 @@[m [mfunction ConfirmReservationPage() {[m
       )[m
       .then(response => response.json())[m
       .then(data => {[m
[31m-        // Check if the guest was authenticated[m
[32m+[m[32m        // Check if the room was added[m
         if(data) {[m
[31m-            // If the guest was authenticated, save the username to the session info[m
[31m-            // so it is accessible on other pages (this will be needed for associating[m
[31m-            // reservations and similar items)[m
[32m+[m[32m            setIsHidden('green');[m
[32m+[m[32m            setContent("Reservation created");[m
[32m+[m[32m            console.log("success");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            setIsHidden('red');[m
[32m+[m[32m            setContent("Error creating reservation, please do not try to confirm the same reservation twice");[m
[32m+[m[32m            console.log("oh no");[m
         }[m
       })[m
       .catch(error => console.error('Error creating booking:', error));[m
[36m@@ -135,6 +141,7 @@[m [mfunction ConfirmReservationPage() {[m
                             <p>${nightlyCost * nightsStayed}</p>[m
                         </div>[m
                     </div>[m
[32m+[m[32m                    <div className={isHidden + " center-text"}>{content}</div>[m
                     <input type="submit" [m
                            value="Confirm" [m
                            className="cnf-btn" [m
[1mdiff --git a/reactFrontEnd/src/pages/GuestReservations.jsx b/reactFrontEnd/src/pages/GuestReservations.jsx[m
[1mnew file mode 100644[m
[1mindex 00000000..eef30fce[m
[1m--- /dev/null[m
[1m+++ b/reactFrontEnd/src/pages/GuestReservations.jsx[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mimport GuestNavigation from "../components/GuestNavigation";[m
[32m+[m
[32m+[m[32mfunction GuestReservations() {[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <div>[m
[32m+[m[32m            <GuestNavigation />[m
[32m+[m[32m        </div>[m
[32m+[m[32m    );[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default GuestReservations;[m
\ No newline at end of file[m
[1mdiff --git a/reactFrontEnd/src/pages/HomePage.jsx b/reactFrontEnd/src/pages/HomePage.jsx[m
[1mindex 1635ee8e..366c0eeb 100644[m
[1m--- a/reactFrontEnd/src/pages/HomePage.jsx[m
[1m+++ b/reactFrontEnd/src/pages/HomePage.jsx[m
[36m@@ -6,10 +6,10 @@[m [mfunction HomePage() {[m
         <div>[m
             <h1>Welcome to Stay & Shop Reservation System</h1>[m
             <p>Experience the unique combination of comfortable stay and exclusive shopping experience.</p>[m
[31m-            <Link to="/login">Login </Link>[m
[31m-            <Link to="/shop"> Shop Now </Link>[m
[31m-            <Link to="/clerkRooms"> Clerk Rooms </Link>[m
[31m-            <Link to="/registerGuest"> Create Guest Account</Link>[m
[32m+[m[32m            <p><Link to="/login">Login </Link></p>[m
[32m+[m[32m            <p><Link to="/clerkRooms"> Clerk Rooms </Link></p>[m
[32m+[m[32m            <p><Link to="/registerGuest"> Create Guest Account</Link></p>[m
[32m+[m[32m            <p><Link to="/roomSearch">Guest page</Link></p>[m
         </div>[m
     );[m
 }[m
[1mdiff --git a/reactFrontEnd/src/pages/RoomSearch.jsx b/reactFrontEnd/src/pages/RoomSearch.jsx[m
[1mindex 1827b39b..70c854cd 100644[m
[1m--- a/reactFrontEnd/src/pages/RoomSearch.jsx[m
[1m+++ b/reactFrontEnd/src/pages/RoomSearch.jsx[m
[36m@@ -1,6 +1,7 @@[m
 import { useState } from 'react';[m
 import { useNavigate } from 'react-router-dom';[m
 import GuestHeader from "../components/GuestHeader";[m
[32m+[m[32mimport './styles/roomSearch.css'[m
 [m
 [m
 function RoomSearch() {[m
[36m@@ -21,26 +22,30 @@[m [mfunction RoomSearch() {[m
         <div>[m
             <GuestHeader/>[m
             <h1 className="content-start">Choose dates for your stay</h1>[m
[31m-            <form>[m
[31m-                <label htmlFor="start_date">Start date:</label>[m
[31m-                <input [m
[31m-                    type="text" [m
[31m-                    id="start_date" [m
[31m-                    name="startDate"[m
[31m-                    placeholder="YYYY-MM-DD" [m
[31m-                    pattern="(?:19|20)(?:(?:[13579][26]|[02468][048])-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))|(?:[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:29|30))|(?:(?:0[13578]|1[02])-31)))"[m
[31m-                    onChange={(e) => setStart(e.target.value)}[m
[31m-                    required/>[m
[31m-                <label htmlFor="end_date">End date:</label>[m
[31m-                <input [m
[31m-                    type="text" [m
[31m-                    id="end_date" [m
[31m-                    name="endDate" [m
[31m-                    placeholder="YYYY-MM-DD" [m
[31m-                    pattern="(?:19|20)(?:(?:[13579][26]|[02468][048])-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))|(?:[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:29|30))|(?:(?:0[13578]|1[02])-31)))"[m
[31m-                    onChange={(e) => setEnd(e.target.value)}[m
[31m-                    required/>[m
[31m-                <button onClick={handleDateConfirm}>Confirm Dates</button>[m
[32m+[m[32m            <form className="form-grid">[m
[32m+[m[32m                <div className="grid-element">[m
[32m+[m[32m                    <label htmlFor="start_date">Start date:</label>[m
[32m+[m[32m                    <input[m[41m [m
[32m+[m[32m                        type="text"[m[41m [m
[32m+[m[32m                        id="start_date"[m[41m [m
[32m+[m[32m                        name="startDate"[m
[32m+[m[32m                        placeholder="YYYY-MM-DD"[m[41m [m
[32m+[m[32m                        pattern="(?:19|20)(?:(?:[13579][26]|[02468][048])-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))|(?:[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:29|30))|(?:(?:0[13578]|1[02])-31)))"[m
[32m+[m[32m                        onChange={(e) => setStart(e.target.value)}[m
[32m+[m[32m                        required/>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div className="grid-element">[m
[32m+[m[32m                    <label htmlFor="end_date">End date:</label>[m
[32m+[m[32m                    <input[m[41m [m
[32m+[m[32m                        type="text"[m[41m [m
[32m+[m[32m                        id="end_date"[m[41m [m
[32m+[m[32m                        name="endDate"[m[41m [m
[32m+[m[32m                        placeholder="YYYY-MM-DD"[m[41m [m
[32m+[m[32m                        pattern="(?:19|20)(?:(?:[13579][26]|[02468][048])-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))|(?:[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:29|30))|(?:(?:0[13578]|1[02])-31)))"[m
[32m+[m[32m                        onChange={(e) => setEnd(e.target.value)}[m
[32m+[m[32m                        required/>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <button className="grid-element grid-btn" onClick={handleDateConfirm}>Confirm Dates</button>[m
             </form>[m
         </div>[m
     );[m
[1mdiff --git a/reactFrontEnd/src/pages/styles/clerkRoomPage.css b/reactFrontEnd/src/pages/styles/clerkRoomPage.css[m
[1mindex 8628de5d..0c61c539 100644[m
[1m--- a/reactFrontEnd/src/pages/styles/clerkRoomPage.css[m
[1m+++ b/reactFrontEnd/src/pages/styles/clerkRoomPage.css[m
[36m@@ -20,6 +20,13 @@[m
     justify-self: center;[m
     grid-column: 1/3;[m
 }[m
[32m+[m[32m.room-button {[m
[32m+[m[32m    width: auto;[m
[32m+[m[32m    padding: 5px;[m
[32m+[m[32m    border-radius: 10px;[m
[32m+[m[32m    justify-self: center;[m
[32m+[m[32m    grid-column: 1/3;[m
[32m+[m[32m}[m
 [m
 .close-btn {[m
     position: absolute;[m
[1mdiff --git a/reactFrontEnd/src/pages/styles/confirmReservationPage.css b/reactFrontEnd/src/pages/styles/confirmReservationPage.css[m
[1mindex 41f1eae0..7f1bef1d 100644[m
[1m--- a/reactFrontEnd/src/pages/styles/confirmReservationPage.css[m
[1m+++ b/reactFrontEnd/src/pages/styles/confirmReservationPage.css[m
[36m@@ -51,4 +51,16 @@[m [mul.center-list{[m
     margin-left: auto;[m
     margin-right: auto;[m
     list-style-position: inside;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .hidden {[m
[32m+[m[32m    display: none;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .green {[m
[32m+[m[32m    color: green;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .red {[m
[32m+[m[32m    color: red;[m
   }[m
\ No newline at end of file[m
[1mdiff --git a/reactFrontEnd/src/pages/styles/roomSearch.css b/reactFrontEnd/src/pages/styles/roomSearch.css[m
[1mnew file mode 100644[m
[1mindex 00000000..b33b543f[m
[1m--- /dev/null[m
[1m+++ b/reactFrontEnd/src/pages/styles/roomSearch.css[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m.form-grid {[m
[32m+[m[32m    display: grid;[m
[32m+[m[32m    gap: 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.grid-element {[m
[32m+[m[32m    justify-self: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.grid-btn {[m
[32m+[m[32m    width: auto;[m
[32m+[m[32m    border-radius: 10px;[m
[32m+[m[32m    padding: 5px;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/accounts/AccountAuthenticator.java b/src/main/java/bearbytes/dev/hotel/accounts/AccountAuthenticator.java[m
[1mindex b9844479..921765ee 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/accounts/AccountAuthenticator.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/accounts/AccountAuthenticator.java[m
[36m@@ -1,17 +1,19 @@[m
 package bearbytes.dev.hotel.accounts;[m
 [m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.InterfaceDAO;[m
 import org.mindrot.jbcrypt.BCrypt;[m
 [m
[31m-import bearbytes.dev.hotel.interfaces.GenericDAO;[m
 import org.springframework.web.bind.annotation.RequestBody;[m
 [m
 import java.sql.*;[m
 import java.util.Properties;[m
 [m
[31m-public class AccountAuthenticator implements GenericDAO {[m
[32m+[m[32mpublic class AccountAuthenticator {[m
 [m
     private Properties p;[m
     private Connection c;[m
[32m+[m[32m    static final String dbClassName = "com.mysql.cj.jdbc.Driver";[m
[32m+[m[32m    static final String CONNECTION = "jdbc:mysql://127.0.0.1/mysql";[m
 [m
     public AccountAuthenticator() {[m
         p = new Properties();[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/accounts/AccountController.java b/src/main/java/bearbytes/dev/hotel/accounts/AccountController.java[m
[1mindex 7935d9f5..88ff4f11 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/accounts/AccountController.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/accounts/AccountController.java[m
[36m@@ -1,5 +1,6 @@[m
 package bearbytes.dev.hotel.accounts;[m
 [m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.IAccountDAO;[m
 import org.springframework.http.ResponseEntity;[m
 import org.springframework.web.bind.annotation.*;[m
 [m
[36m@@ -10,7 +11,7 @@[m [mimport java.util.regex.Pattern;[m
 @RequestMapping("/accounts")[m
 public class AccountController {[m
     private AccountAuthenticator auth;[m
[31m-    private AccountDAO aDAO;[m
[32m+[m[32m    private IAccountDAO aDAO;[m
 [m
     public AccountController()  {[m
         auth = new AccountAuthenticator();[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/accounts/AccountDAO.java b/src/main/java/bearbytes/dev/hotel/accounts/AccountDAO.java[m
[1mindex 2dbc2134..9ad8801a 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/accounts/AccountDAO.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/accounts/AccountDAO.java[m
[36m@@ -1,11 +1,13 @@[m
 package bearbytes.dev.hotel.accounts;[m
 [m
[31m-import bearbytes.dev.hotel.interfaces.GenericDAO;[m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.IAccountDAO;[m
 [m
 import java.sql.*;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Collection;[m
 import java.util.Properties;[m
 [m
[31m-public class AccountDAO implements GenericDAO {[m
[32m+[m[32mpublic class AccountDAO implements IAccountDAO {[m
     private Properties p;[m
     private Connection c;[m
     AccountAuthenticator auth;[m
[36m@@ -72,7 +74,31 @@[m [mpublic class AccountDAO implements GenericDAO {[m
         return false;[m
     }[m
 [m
[31m-    public Boolean add(Clerk c) {[m
[32m+[m[32m    public boolean remove(Guest g) {[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean add(Clerk c) {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Collection<Account> getAll() {[m
[32m+[m[32m        return new ArrayList<Account>();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean verify() {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean checkAvailability() {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean add(Account a) {[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean remove(Account a) {[m
         return false;[m
     }[m
 }[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/floor/Floor.java b/src/main/java/bearbytes/dev/hotel/floor/Floor.java[m
[1mindex 36e91494..6256ca09 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/floor/Floor.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/floor/Floor.java[m
[36m@@ -5,17 +5,15 @@[m [mimport java.util.List;[m
 [m
 public class Floor {[m
     List<Room> rooms = new ArrayList<>();[m
[31m-    Theme floorTheme;[m
[32m+[m[32m    String floorTheme;[m
 [m
[31m-    public void setFloorTheme(Theme floorTheme) { this.floorTheme = floorTheme; }[m
[32m+[m[32m    public void setFloorTheme(String floorTheme) { this.floorTheme = floorTheme; }[m
 [m
     public void setRooms(List<Room> rooms) { this.rooms = new ArrayList<>(rooms); }[m
 [m
     public List<Room> getRooms() { return rooms; }[m
 [m
[31m-    public Theme getFloorTheme() { return floorTheme; }[m
[32m+[m[32m    public String getFloorTheme() { return floorTheme; }[m
 [m
     public void addRoom(Room room) { rooms.add(room); }[m
[31m-[m
[31m-    public enum Theme {NATURE_RETREAT, URBAN_ELEGANCE, VINTAGE_CHARM}[m
 }[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/floor/Room.java b/src/main/java/bearbytes/dev/hotel/floor/Room.java[m
[1mindex 9bfad6bd..07027a6b 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/floor/Room.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/floor/Room.java[m
[36m@@ -23,9 +23,6 @@[m [mpublic class Room {[m
 [m
     public Room(int roomNumber, int numBeds, int floor, double dailyRate, boolean smokingAllowed,[m
                 BedType bedSize, RoomType type, QualityLevel quality) {[m
[31m-        System.out.println("Invoking Room constructor");[m
[31m-        System.out.println(roomNumber + " " + numBeds + " " + floor + " " + dailyRate + " " + smokingAllowed + " " +[m
[31m-                           bedSize + " "  + type + " " + quality);[m
         this.number = roomNumber;[m
         this.numBeds = numBeds;[m
         this.floor = floor;[m
[36m@@ -100,6 +97,12 @@[m [mpublic class Room {[m
         this.smokingAllowed = smokingAllowed;[m
     }[m
 [m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return number + ", " + floor + ", " + numBeds + ", " + dailyRate + ", " +[m
[32m+[m[32m                smokingAllowed + ", " + bedSize.toString() + ", " + type.toString() +[m
[32m+[m[32m                ", " + quality.toString();[m
[32m+[m[32m    }[m
[32m+[m
     public boolean equals(Object o) {[m
         if(o == this) {[m
             return true;[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/floor/RoomController.java b/src/main/java/bearbytes/dev/hotel/floor/RoomController.java[m
[1mindex 0f321c72..3e618769 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/floor/RoomController.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/floor/RoomController.java[m
[36m@@ -1,5 +1,7 @@[m
 package bearbytes.dev.hotel.floor;[m
 [m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.IRoomDAO;[m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.InterfaceDAO;[m
 import org.springframework.web.bind.annotation.*;[m
 [m
 import java.sql.SQLException;[m
[36m@@ -9,7 +11,7 @@[m [mimport java.util.ArrayList;[m
 @RestController[m
 @RequestMapping("/room")[m
 public class RoomController {[m
[31m-    RoomDAO rooms;[m
[32m+[m[32m    IRoomDAO rooms;[m
 [m
     public RoomController() {[m
         rooms = new RoomDAO();[m
[36m@@ -19,9 +21,9 @@[m [mpublic class RoomController {[m
     @PostMapping("/getAvailableRooms")[m
     public Collection<Room> getAvailableRooms(@RequestBody String[] dates) {[m
         try {[m
[31m-            return rooms.getAvailableRooms(dates);[m
[32m+[m[32m            return rooms.getAvailable(dates);[m
         } catch(Exception e) {[m
[31m-            System.out.println("Woops");[m
[32m+[m[32m            e.printStackTrace();[m
         }[m
         return new ArrayList<>();[m
     }[m
[36m@@ -30,22 +32,33 @@[m [mpublic class RoomController {[m
     @GetMapping("/getRooms")[m
     public Collection<Room> getRooms() {[m
         try {[m
[31m-            return rooms.getRooms();[m
[32m+[m[32m            return rooms.getAll();[m
         } catch(Exception e) {[m
[31m-            System.out.println("Woops");[m
[32m+[m[32m            e.printStackTrace();[m
         }[m
         return new ArrayList<>();[m
     }[m
 [m
     @CrossOrigin(origins = "http://localhost:3000")[m
     @PostMapping("/add")[m
[31m-    public Boolean add(@RequestBody Room room) {[m
[32m+[m[32m    public boolean add(@RequestBody Room room) {[m
         try {[m
             return rooms.add(room);[m
         } catch(Exception e) {[m
[31m-            System.out.println("Woops");[m
[32m+[m[32m            e.printStackTrace();[m
         }[m
 [m
         return false;[m
     }[m
[32m+[m
[32m+[m[32m    @CrossOrigin(origins = "http://localhost:3000")[m
[32m+[m[32m    @PostMapping("/modify")[m
[32m+[m[32m    public boolean modify(@RequestBody Room[] r) {[m
[32m+[m[32m        try {[m
[32m+[m[32m            return rooms.modify(r);[m
[32m+[m[32m        } catch(Exception e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/floor/RoomDAO.java b/src/main/java/bearbytes/dev/hotel/floor/RoomDAO.java[m
[1mindex 52178683..19f493a4 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/floor/RoomDAO.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/floor/RoomDAO.java[m
[36m@@ -1,15 +1,13 @@[m
 package bearbytes.dev.hotel.floor;[m
 [m
[31m-import bearbytes.dev.hotel.interfaces.GenericDAO;[m
[31m-[m
 import java.sql.*;[m
 import java.util.ArrayList;[m
 import java.util.Collection;[m
 import java.util.List;[m
 import java.util.Properties;[m
[31m-import bearbytes.dev.hotel.floor.Room;[m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.IRoomDAO;[m
 [m
[31m-public class RoomDAO implements GenericDAO {[m
[32m+[m[32mpublic class RoomDAO implements IRoomDAO {[m
 [m
     private Properties p;[m
     private Connection c;[m
[36m@@ -23,7 +21,7 @@[m [mpublic class RoomDAO implements GenericDAO {[m
         c = null;[m
     }[m
 [m
[31m-    public Boolean add(Room room) throws ClassNotFoundException, SQLException {[m
[32m+[m[32m    public boolean add(Room room) throws ClassNotFoundException, SQLException {[m
 [m
         Class.forName(dbClassName);[m
 [m
[36m@@ -66,7 +64,70 @@[m [mpublic class RoomDAO implements GenericDAO {[m
         return true;[m
     }[m
 [m
[31m-    public Collection<Room> getRooms() throws ClassNotFoundException, SQLException {[m
[32m+[m[32m    public boolean modify(Room[] rooms) throws ClassNotFoundException, SQLException{[m
[32m+[m[32m        // Class.forName(xxx) loads the jdbc classes and[m
[32m+[m[32m        // creates a drivermanager class factory[m
[32m+[m[32m        Class.forName(dbClassName);[m
[32m+[m[32m        PreparedStatement ps = null;[m
[32m+[m
[32m+[m[32m        // Now try to connect[m
[32m+[m[32m        try {[m
[32m+[m
[32m+[m[32m            Collection<Room> r = getAll();[m
[32m+[m
[32m+[m[32m            // Check if the room to change is valid[m
[32m+[m[32m            if(!r.contains(rooms[0])) {[m
[32m+[m[32m                System.out.println(rooms[0]);[m
[32m+[m[32m                System.out.println("Room not present in database");[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // Check if the room number is available to change to[m
[32m+[m[32m            if(rooms[0].getNumber() != rooms[1].getNumber()) {[m
[32m+[m[32m                for (Room room : r) {[m
[32m+[m[32m                    if (room.getNumber() == rooms[1].getNumber()) {[m
[32m+[m[32m                        System.out.println("This room number is already taken");[m
[32m+[m[32m                        return false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            c = DriverManager.getConnection(CONNECTION, p);[m
[32m+[m
[32m+[m[32m            // Query for the rooms[m
[32m+[m[32m            String query = "UPDATE myDB.Rooms SET roomNumber = ?, floor = ?," +[m
[32m+[m[32m                    " numBeds = ?, dailyRate = ?, smokingAllowed = ?, bedSize = ?," +[m
[32m+[m[32m                    " type = ?, quality = ? WHERE roomNumber = ?";[m
[32m+[m[32m            ps = c.prepareStatement(query);[m
[32m+[m[32m            ps.setInt(1, rooms[1].getNumber());[m
[32m+[m[32m            ps.setInt(2, rooms[1].getFloor());[m
[32m+[m[32m            ps.setInt(3, rooms[1].getNumBeds());[m
[32m+[m[32m            ps.setDouble(4, rooms[1].getDailyRate());[m
[32m+[m[32m            ps.setBoolean(5, rooms[1].getSmokingAllowed());[m
[32m+[m[32m            ps.setString(6, Room.BedType.toString(rooms[1].getBedSize()));[m
[32m+[m[32m            ps.setString(7, Room.RoomType.toString(rooms[1].getType()));[m
[32m+[m[32m            ps.setString(8, Room.QualityLevel.toString(rooms[1].getQuality()));[m
[32m+[m[32m            ps.setInt(9, rooms[0].getNumber());[m
[32m+[m[32m            ps.executeUpdate();[m
[32m+[m[32m        } catch( SQLException e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        } finally{[m
[32m+[m[32m            if(ps != null) {[m
[32m+[m[32m                ps.close();[m
[32m+[m[32m            }[m
[32m+[m[32m            if(c != null) {[m
[32m+[m[32m                c.close();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean remove(Room r) {[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Collection<Room> getAll() throws ClassNotFoundException, SQLException {[m
         List<Room> rooms = new ArrayList<>();[m
 [m
         // Class.forName(xxx) loads the jdbc classes and[m
[36m@@ -97,7 +158,7 @@[m [mpublic class RoomDAO implements GenericDAO {[m
         return rooms;[m
     }[m
 [m
[31m-    public Collection<Room> getAvailableRooms(String[] dates) throws ClassNotFoundException, SQLException {[m
[32m+[m[32m    public Collection<Room> getAvailable(String[] dates) throws ClassNotFoundException, SQLException {[m
         List<Room> rooms = new ArrayList<>();[m
 [m
         // Class.forName(xxx) loads the jdbc classes and[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/interfaces/GenericDAO.java b/src/main/java/bearbytes/dev/hotel/interfaces/GenericDAO.java[m
[1mdeleted file mode 100644[m
[1mindex 31aa6ef8..00000000[m
[1m--- a/src/main/java/bearbytes/dev/hotel/interfaces/GenericDAO.java[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-package bearbytes.dev.hotel.interfaces;[m
[31m-[m
[31m-import java.sql.Connection;[m
[31m-import java.util.Properties;[m
[31m-[m
[31m-public interface GenericDAO {[m
[31m-    static final String dbClassName = "com.mysql.cj.jdbc.Driver";[m
[31m-    static final String CONNECTION = "jdbc:mysql://127.0.0.1/mysql";[m
[31m-}[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/interfaces/IAccountDAO.java b/src/main/java/bearbytes/dev/hotel/interfaces/IAccountDAO.java[m
[1mnew file mode 100644[m
[1mindex 00000000..1181d31e[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/interfaces/IAccountDAO.java[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mpackage bearbytes.dev.hotel.interfaces;[m
[32m+[m
[32m+[m[32mimport bearbytes.dev.hotel.accounts.Account;[m
[32m+[m
[32m+[m[32mpublic interface IAccountDAO extends InterfaceDAO<Account> {[m
[32m+[m[32m    boolean verify();[m
[32m+[m
[32m+[m[32m    boolean checkAvailability();[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/interfaces/IRoomDAO.java b/src/main/java/bearbytes/dev/hotel/interfaces/IRoomDAO.java[m
[1mnew file mode 100644[m
[1mindex 00000000..b942d193[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/interfaces/IRoomDAO.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage bearbytes.dev.hotel.interfaces;[m
[32m+[m
[32m+[m[32mimport bearbytes.dev.hotel.floor.Room;[m
[32m+[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m[32mimport java.util.Collection;[m
[32m+[m
[32m+[m[32mpublic interface IRoomDAO extends InterfaceDAO<Room>{[m
[32m+[m[32m    Collection<Room> getAvailable(String[] dates) throws ClassNotFoundException, SQLException;[m
[32m+[m
[32m+[m[32m    boolean modify(Room[] r) throws ClassNotFoundException, SQLException;[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/interfaces/InterfaceDAO.java b/src/main/java/bearbytes/dev/hotel/interfaces/InterfaceDAO.java[m
[1mnew file mode 100644[m
[1mindex 00000000..d6bcbf0f[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/interfaces/InterfaceDAO.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage bearbytes.dev.hotel.interfaces;[m
[32m+[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m[32mimport java.text.ParseException;[m
[32m+[m[32mimport java.util.Collection;[m
[32m+[m
[32m+[m[32mpublic interface InterfaceDAO<T> {[m
[32m+[m[32m    final String dbClassName = "com.mysql.cj.jdbc.Driver";[m
[32m+[m[32m    final String CONNECTION = "jdbc:mysql://127.0.0.1/mysql";[m
[32m+[m
[32m+[m[32m    boolean add(T value) throws SQLException, ClassNotFoundException, ParseException;[m
[32m+[m[32m    boolean remove(T value);[m
[32m+[m
[32m+[m[32m    Collection<T> getAll() throws ClassNotFoundException, SQLException;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/reservation/ReservationController.java b/src/main/java/bearbytes/dev/hotel/reservation/ReservationController.java[m
[1mindex a6648099..9cf69225 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/reservation/ReservationController.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/reservation/ReservationController.java[m
[36m@@ -18,7 +18,7 @@[m [mpublic class ReservationController {[m
     @PostMapping("/add")[m
     public Boolean add(@RequestBody Reservation reservation) throws ClassNotFoundException, SQLException {[m
         try {[m
[31m-            resDAO.add(reservation);[m
[32m+[m[32m            return resDAO.add(reservation);[m
         } catch(Exception e) {[m
             System.out.println("Woops");[m
         }[m
[1mdiff --git a/src/main/java/bearbytes/dev/hotel/reservation/ReservationDAO.java b/src/main/java/bearbytes/dev/hotel/reservation/ReservationDAO.java[m
[1mindex 8ecaac64..fec1f7f3 100644[m
[1m--- a/src/main/java/bearbytes/dev/hotel/reservation/ReservationDAO.java[m
[1m+++ b/src/main/java/bearbytes/dev/hotel/reservation/ReservationDAO.java[m
[36m@@ -1,16 +1,18 @@[m
 package bearbytes.dev.hotel.reservation;[m
 [m
[31m-import bearbytes.dev.hotel.interfaces.GenericDAO;[m
[32m+[m[32mimport bearbytes.dev.hotel.interfaces.InterfaceDAO;[m
 [m
 import java.io.*;[m
 import java.nio.file.Paths;[m
 import java.sql.*;[m
 import java.text.ParseException;[m
 import java.text.SimpleDateFormat;[m
[32m+[m[32mimport java.util.ArrayList;[m
 import java.util.Calendar;[m
[32m+[m[32mimport java.util.Collection;[m
 import java.util.Properties;[m
 [m
[31m-public class ReservationDAO implements GenericDAO {[m
[32m+[m[32mpublic class ReservationDAO implements InterfaceDAO<Reservation> {[m
     private SimpleDateFormat simpleDateFormat;[m
 [m
     public ReservationDAO() {[m
[36m@@ -50,7 +52,8 @@[m [mpublic class ReservationDAO implements GenericDAO {[m
         return true;[m
     }[m
 [m
[31m-    public void add(Reservation reservation) throws SQLException, ClassNotFoundException, ParseException {[m
[32m+[m[41m    [m
[32m+[m[32m    public boolean add(Reservation reservation) throws SQLException, ClassNotFoundException, ParseException {[m
         // Class.forName(xxx) loads the jdbc classes and[m
         // creates a drivermanager class factory[m
         Class.forName(dbClassName);[m
[36m@@ -87,6 +90,7 @@[m [mpublic class ReservationDAO implements GenericDAO {[m
                 ps2.setInt(3, reservation.getRooms().get(i).getNumber());[m
                 ps2.executeUpdate();[m
             }[m
[32m+[m[32m            return true;[m
         } catch( SQLException e) {[m
             e.printStackTrace();[m
         } finally{[m
[36m@@ -94,5 +98,14 @@[m [mpublic class ReservationDAO implements GenericDAO {[m
                 c.close();[m
             }[m
         }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean remove(Reservation r) {[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Collection<Reservation> getAll() {[m
[32m+[m[32m        return new ArrayList<Reservation>();[m
     }[m
 }[m
\ No newline at end of file[m
